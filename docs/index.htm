<!DOCTYPE html>
<!-- saved from url=(0092)https://codelabs-preview.appspot.com/?file_id=1wZ5OdXmMWXeWsmsL5xvILVUc7adQErUVpuTXNGDSUQg#0 -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <meta name="viewport" content="width=device-width, minimum-scale=1.0, initial-scale=1.0, user-scalable=yes">
  <meta name="theme-color" content="#4F7DC9">
  
  <title>Artifact Repository Manager  Ad-hoc</title>
  <link rel="stylesheet" href="./docs_files/css">
  <link rel="stylesheet" href="./docs_files/icon">
  <link rel="stylesheet" href="./docs_files/codelab-elements.css">
  <style>
    .success {
      color: #1e8e3e;
    }
    .error {
      color: red;
    }
  </style>
</head>
<body class="vsc-initialized">
  <google-codelab id="https://github.com/romellfudi/MockitoJfrogArtefactorySample" environment="web" feedback-link="https://github.com/romellfudi/MockitoJfrogArtefactorySample/issues" selected="0" google-codelab-ready="" codelab-title="Artifact Repository Manager  Ad-hoc"><div id="drawer"><div class="codelab-time-container" style="display: none;"></div><div class="steps"><ol><li completed="" selected=""><a href="https://codelabs-preview.appspot.com/?file_id=1wZ5OdXmMWXeWsmsL5xvILVUc7adQErUVpuTXNGDSUQg#0"><span class="step"><span>Introduction</span></span></a></li><li><a href="https://codelabs-preview.appspot.com/?file_id=1wZ5OdXmMWXeWsmsL5xvILVUc7adQErUVpuTXNGDSUQg#1"><span class="step"><span>Getting set up</span></span></a></li><li><a href="https://codelabs-preview.appspot.com/?file_id=1wZ5OdXmMWXeWsmsL5xvILVUc7adQErUVpuTXNGDSUQg#2"><span class="step"><span>Testing</span></span></a></li><li><a href="https://codelabs-preview.appspot.com/?file_id=1wZ5OdXmMWXeWsmsL5xvILVUc7adQErUVpuTXNGDSUQg#3"><span class="step"><span>Upload library/api</span></span></a></li><li><a href="https://codelabs-preview.appspot.com/?file_id=1wZ5OdXmMWXeWsmsL5xvILVUc7adQErUVpuTXNGDSUQg#4"><span class="step"><span>Upload Artifacts</span></span></a></li><li><a href="https://codelabs-preview.appspot.com/?file_id=1wZ5OdXmMWXeWsmsL5xvILVUc7adQErUVpuTXNGDSUQg#5"><span class="step"><span>Repository Configuration</span></span></a></li><li><a href="https://codelabs-preview.appspot.com/?file_id=1wZ5OdXmMWXeWsmsL5xvILVUc7adQErUVpuTXNGDSUQg#6"><span class="step"><span>Upload Library</span></span></a></li><li><a href="https://codelabs-preview.appspot.com/?file_id=1wZ5OdXmMWXeWsmsL5xvILVUc7adQErUVpuTXNGDSUQg#7"><span class="step"><span>Download library/api</span></span></a></li><li><a href="https://codelabs-preview.appspot.com/?file_id=1wZ5OdXmMWXeWsmsL5xvILVUc7adQErUVpuTXNGDSUQg#8"><span class="step"><span>License</span></span></a></li></ol></div><div class="metadata"><a target="_blank" href="https://github.com/romellfudi/MockitoJfrogArtefactorySample/issues"><i class="material-icons">bug_report</i> Report a mistake</a></div></div><div id="codelab-title"><div id="codelab-nav-buttons"><a href="https://codelabs-preview.appspot.com/" id="arrow-back"><i class="material-icons">close</i></a><a href="https://codelabs-preview.appspot.com/?file_id=1wZ5OdXmMWXeWsmsL5xvILVUc7adQErUVpuTXNGDSUQg#" id="menu"><i class="material-icons">menu</i></a></div><h1 class="title">Artifact Repository Manager  Ad-hoc</h1><div class="codelab-time-container" style="display: none;"></div><devsite-user></devsite-user></div><div id="main"><div id="steps"><google-codelab-step label="Introduction" duration="0" step="1" style="transform: translate3d(0px, 0px, 0px);" selected=""><div class="instructions"><div class="inner"><h2 is-upgraded="" class="step-title">1. Introduction</h2>
        <h2 is-upgraded=""><strong>Objetivo</strong></h2>
<p>Muy frecuentemente los desarrollos de aplicaciones móviles se vuelven muy difíciles de mantener puesto los desarrollos muchas veces utilizan librerías ad-hocs recicladas.</p>
<h2 is-upgraded=""><strong>Depencencias</strong></h2>
<p>Comenzamos primero configurando nuestro entorno de pruebas.</p>
<p class="image-container"><img style="width: 160.00px" src="./docs_files/Mockito.png"></p>
<p><a href="https://jfrog.com/open-source/" target="_blank"><paper-button class="colored" raised=""><iron-icon icon="file-download"></iron-icon>Download Artifactory Community</paper-button></a></p>
<p>Una vez descargado y instalado en nuestro servidor o en el mejor de los casos usar Docker:</p>
<p class="image-container"><img style="width: 336.00px" src="./docs_files/docker_facebook_share.png"></p>
<p><a href="https://jfrog.com/partner/docker/" target="_blank"><paper-button class="colored" raised=""><iron-icon icon="file-download"></iron-icon>Download Docker Artifactory</paper-button></a></p>


      </div></div></google-codelab-step><google-codelab-step label="Getting set up" duration="0" step="2" style="transform: translate3d(110%, 0px, 0px);"><div class="instructions"><div class="inner"><h2 is-upgraded="" class="step-title">2. Getting set up</h2>
        <p>Para ello expongo en este sencillo tutorial una manera eficiente de tener un repositorio de artefactos software in-home, con Jfrog - Artefactory.</p>
<h2 is-upgraded=""><strong>Download the Code</strong></h2>
<p>Click en el link de descarga para obtener el código base de este tutorial:</p>
<p><a href="https://github.com/romellfudi/MockitoJfrogArtefactorySample/archive/master.zip" target="_blank"><paper-button class="colored" raised=""><iron-icon icon="file-download"></iron-icon>Download source code</paper-button></a></p>
<h2 class="checklist" is-upgraded=""><strong>What you'll learn</strong></h2>
<ul class="checklist">
<li>Cómo instalar un repositorio de librerías de software libre</li>
<li>Cómo desplegar librerías jar y aar en un repositorio</li>
<li>Cómo acceder a nuestras librerías de nuestro repositorio</li>
</ul>
<h2 is-upgraded=""><strong>What you'll need</strong></h2>
<ul>
<li>Android Studio <code>2.+</code> .</li>
<li><a href="https://chrome.google.com/webstore/detail/web-server-for-chrome/ofhbbkphhbklhfoeikjpcbhemlocgigb" target="_blank">Web Server for Chrome</a>, o nuestro navegador favorito</li>
<li><a href="https://github.com/romellfudi/MockitoJfrogArtefactorySample/archive/master.zip" target="_blank">The sample code</a></li>
<li>Tener un instalador <a href="https://jfrog.com/open-source/" target="_blank"><code>Jfrog</code></a> o usar contenedores <a href="https://jfrog.com/partner/docker/" target="_blank"><code>Docker</code></a></li>
<li>Conocimientos básicos de Gradle &amp; Android</li>
</ul>


      </div></div></google-codelab-step><google-codelab-step label="Testing" duration="0" step="3" style="transform: translate3d(-110%, 0px, 0px);"><div class="instructions"><div class="inner"><h2 is-upgraded="" class="step-title">3. Testing</h2>
        <h2 is-upgraded=""><strong>Run test cases</strong></h2>
<p>Primero verificamos que estén sus pruebas unitarias de la librería funcionando correctamente:</p>
<h2 is-upgraded=""><strong>Comprobamos las dependencias</strong></h2>
<p class="image-container"><img style="width: 432.00px" src="./docs_files/d.png"></p>
<h2 is-upgraded="">Ejecutamos las pruebas</h2>
<h2 is-upgraded=""><img style="width: 486.07px" src="./docs_files/c.png"></h2>
<p>Vemos nuestros resultados en consola o mediante <a href="https://www.sonarqube.org/" target="_blank">SonarQube</a>.</p>
<p class="image-container"><img style="width: 624.00px" src="./docs_files/b.png"></p>
<aside class="special"><p>Pruebas exitosas? Entonces ya nos encontramos listos para compartir nuestra librería..</p>
</aside>


      </div></div></google-codelab-step><google-codelab-step label="Upload library/api" duration="0" step="4" style="transform: translate3d(110%, 0px, 0px);"><div class="instructions"><div class="inner"><h2 is-upgraded="" class="step-title">4. Upload library/api</h2>
        <p>En la ruta de nuestro proyecto Android, conectamos los plugins del JFrog Artefactory:</p>
<pre><code><span class="pln">classpath </span><span class="str">"org.jfrog.buildinfo:build-info-extractor-gradle:3.1.1"</span></code></pre>
<p>En el gradle build del módulo api añadimos en el top:</p>
<pre><code><span class="pln">apply plugin</span><span class="pun">:</span><span class="pln"> </span><span class="str">'com.android.library'</span><span class="pln">
apply plugin</span><span class="pun">:</span><span class="pln"> </span><span class="str">'com.jfrog.artifactory'</span><span class="pln">
apply plugin</span><span class="pun">:</span><span class="pln"> </span><span class="str">'maven-publish'</span></code></pre>
<p>Definimos variables constantes:</p>
<pre><code><span class="kwd">def</span><span class="pln"> packageName </span><span class="pun">=</span><span class="pln"> </span><span class="str">'fudi.freddy.api'</span><span class="pln">
</span><span class="kwd">def</span><span class="pln"> libraryVersion </span><span class="pun">=</span><span class="pln"> </span><span class="str">'1.0.a'</span></code></pre>
<p>Sobre escribimos el task publishing del motor <a href="https://docs.gradle.org/current/userguide/maven_plugin.html" target="_blank">Gradlew</a>:</p>
<pre><code><span class="pln">publishing </span><span class="pun">{</span><span class="pln">
   publications </span><span class="pun">{</span><span class="pln">
       aar</span><span class="pun">(</span><span class="typ">MavenPublication</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
           groupId packageName
           version </span><span class="pun">=</span><span class="pln"> libraryVersion
           artifactId project</span><span class="pun">.</span><span class="pln">getName</span><span class="pun">()</span><span class="pln">
           </span><span class="com">// Preparamos la librería *.aar, ojo al usar flavors</span><span class="pln">
           </span><span class="pun">(</span><span class="str">"$buildDir/outputs/aar/${project.getName()}-release.aar"</span><span class="pun">)</span><span class="pln">
       </span><span class="pun">}</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code></pre>
<p>Creamos un task para empaquetar, se puede configurar hasta niveles de <a href="https://developer.android.com/studio/build/build-variants" target="_blank">flavors</a>:</p>
<pre><code><span class="pln">artifactory </span><span class="pun">{</span><span class="pln">
   contextUrl </span><span class="pun">=</span><span class="pln"> </span><span class="str">'http://localhost:8081/artifactory'</span><span class="pln">
   publish </span><span class="pun">{</span><span class="pln">
       repository </span><span class="pun">{</span><span class="pln">
           </span><span class="com">// Access keys to repo</span><span class="pln">
           repoKey </span><span class="pun">=</span><span class="pln"> </span><span class="str">'libs-release-local'</span><span class="pln">
           username </span><span class="pun">=</span><span class="pln"> </span><span class="str">"admin"</span><span class="pln">
           password </span><span class="pun">=</span><span class="pln"> </span><span class="str">"123qweASD"</span><span class="pln">
       </span><span class="pun">}</span><span class="pln">
       defaults </span><span class="pun">{</span><span class="pln">
           </span><span class="com">// which artifacts should be published</span><span class="pln">
           publications</span><span class="pun">(</span><span class="str">'aar'</span><span class="pun">)</span><span class="pln">
           publishArtifacts </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">true</span><span class="pln">

           properties </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[</span><span class="str">'qa.level'</span><span class="pun">:</span><span class="pln"> </span><span class="str">'basic'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'dev.team'</span><span class="pun">:</span><span class="pln"> </span><span class="str">'core'</span><span class="pun">]</span><span class="pln">
           </span><span class="com">// Publish generated POM files</span><span class="pln">
           publishPom </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">true</span><span class="pln">
       </span><span class="pun">}</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code></pre>


      </div></div></google-codelab-step><google-codelab-step label="Upload Artifacts" duration="0" step="5"><div class="instructions"><div class="inner"><h2 is-upgraded="" class="step-title">5. Upload Artifacts</h2>
        <p>Desde una terminal arrancamos el repositorio de aplicaciones:</p>
<ul>
<li><strong>Windows</strong> - mediante el executable *"artefactoryService.exe"*.</li>
<li><strong>MAC / Ubuntu</strong> - Mediante el batch "artefactory.sh"</li>
</ul>
<p>Una vez acabado su configuración se lanzará en el puerto 8081 (si desea cambiarlo usar el archivo <code>tomcat/conf/server.xml</code>)</p>
<p class="image-container"><img style="width: 432.00px" src="./docs_files/i.png"></p>
<p class="image-container"><img style="width: 624.00px" src="./docs_files/a.png"></p>
<aside class="special"><p>Listo ya tenemos nuestro repositorio en <a href="http://localhost:8081/" target="_blank">localhost:8081</a> (puerto por defecto).</p>
</aside>


      </div></div></google-codelab-step><google-codelab-step label="Repository Configuration" duration="0" step="6"><div class="instructions"><div class="inner"><h2 is-upgraded="" class="step-title">6. Repository Configuration</h2>
        <p>Nos pedirá crear un password de seguridad de acceso, como en la mayoría de servidores podremos configurar más adelante</p>
<p class="image-container"><img style="width: 624.00px" src="./docs_files/e.png"></p>
<p>El tipo de arquitectura del repositorio (para nosotros <a href="https://maven.apache.org/download.cgi" target="_blank">maven</a>):</p>
<p class="image-container"><img style="width: 624.00px" src="./docs_files/f.png"></p>
<p class="image-container"><img style="width: 624.00px" src="./docs_files/g.png"></p>
<p>Obtendremos por fin nuestro dashboard del repositorio de apis:</p>
<p class="image-container"><img style="width: 624.00px" src="./docs_files/h.png"></p>
<aside class="warning"><p><strong>Alerta:</strong> En caso no se pueda llegar hasta este punto, validar las versiones usadas con su sistema operativo.</p>
</aside>


      </div></div></google-codelab-step><google-codelab-step label="Upload Library" duration="0" step="7"><div class="instructions"><div class="inner"><h2 is-upgraded="" class="step-title">7. Upload Library</h2>
        <p>Ahora enviamos nuestra versión al repositorio de apis mediante los siguientes comandos en el terminal</p>
<pre><code><span class="com"># construimos la libraría</span><span class="pln">
</span><span class="pun">./</span><span class="pln">gradlew clean build
</span><span class="com"># construimos el artefacto con su interfaz, su respectivo archivo pom y enseguida lo publicamos en el repositorio</span><span class="pln">
</span><span class="pun">./</span><span class="pln">gradlew assembleRelease generatePomFileForAarPublication artifactoryPublish</span></code></pre>
<p>En el panel-menu del Artifactory buscamos la librería:</p>
<table>
<tbody><tr><td colspan="1" rowspan="1"><p>En JFrog-Artefactory, podremos configurar y mantener todos nuestros artefactos como también nuestros permisos de accesos. Nuestro panel:</p>
<ul>
<li>Panel de Inicio.</li>
<li>Listado de artefactos..</li>
<li>Paquetes específicos</li>
<li>Búsqueda de todos los artefactos en todos nuestros grupos.</li>
<li>Nuestro logs de construcciones</li>
<li>Administración de accesos..</li>
</ul>
</td><td colspan="1" rowspan="1"><p class="image-container"><img style="width: 287.00px" src="./docs_files/k.png"></p>
</td></tr>
</tbody></table>
<h2 is-upgraded=""><strong>Listado de artefactos</strong></h2>
<p class="image-container"><img style="width: 624.00px" src="./docs_files/l.png"></p>
<p>Acá se podrá visualizar el Group ID: <code>fudi.freddy.api</code>, el Artifact ID: <code>api</code>, y la correspondiente versión: <code>1.0.a</code>.</p>
<aside class="special"><p>Listo la librería ya se encuentra compartida dentro de nuestro repositorio.</p>
</aside>


      </div></div></google-codelab-step><google-codelab-step label="Download library/api" duration="0" step="8"><div class="instructions"><div class="inner"><h2 is-upgraded="" class="step-title">8. Download library/api</h2>
        <p>De esta manera puede ser usada en cualquier proyecto dentro de la organización como cualquier librería de maven, lo primero es determinar de dónde va a obtener las apis.</p>
<p>Dentro de la configuración de la aplicación direccionamos el repositorio maven:</p>
<pre><code><span class="pln">repositories </span><span class="pun">{</span><span class="pln">
    maven </span><span class="pun">{</span><span class="pln"> url </span><span class="str">"http://localhost:8081/artifactory/libs-release-local"</span><span class="pln"> </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code></pre>
<p>y cambiamos la dependencia de nuestra librería a la del repositorio:</p>
<pre><code><span class="com">//compile project(':api')</span><span class="pln">
compile </span><span class="str">'fudi.freddy.api:api:1.0.a'</span></code></pre>
<aside class="special"><p>Ya podremos utilizar todas nuestras, cambiar de versiones y utilizarlas en cualquier momento para todos nuestros proyectos.</p>
</aside>


      </div></div></google-codelab-step><google-codelab-step label="License" duration="0" step="9" style="transform: translate3d(110%, 0px, 0px);"><div class="instructions"><div class="inner"><h2 is-upgraded="" class="step-title">9. License</h2>
        <h2 is-upgraded=""><strong>by Romell Domínguez</strong></h2>
<p class="image-container"><img style="width: 287.00px" src="./docs_files/icono.png"></p>
<p>Copyright 2018 Romell D.Z.</p>
<p>Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at</p>
<p>http://www.apache.org/licenses/LICENSE-2.0</p>
<p>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS,</p>
<p>WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</p>
<p>See the License for the specific language governing permissions and limitations under the License.</p>


      </div></div></google-codelab-step></div><div id="controls"><div id="fabs"><a href="https://codelabs-preview.appspot.com/?file_id=1wZ5OdXmMWXeWsmsL5xvILVUc7adQErUVpuTXNGDSUQg#" id="previous-step" title="Previous step" disappear="">Back</a><div class="spacer"></div><a href="https://codelabs-preview.appspot.com/?file_id=1wZ5OdXmMWXeWsmsL5xvILVUc7adQErUVpuTXNGDSUQg#" id="next-step" title="Next step">Next</a><a href="https://codelabs-preview.appspot.com/" id="done" title="Codelab complete" hidden="">Done</a></div></div></div></google-codelab>

  <script async="">
    document.addEventListener("DOMContentLoaded", function() {
      var pubBtn = document.getElementById('publishButton');
      var pubForm = document.getElementById('publishForm');
      var pubStatus = document.getElementById('publishButtonStatus');

      pubForm.addEventListener('submit', function(e) {
        e.preventDefault();
        pubBtn.disabled = true;
        pubStatus.textContent = '';
        pubStatus.classList.remove('success');
        pubStatus.classList.remove('error');

        var req = new XMLHttpRequest();

        var onError = function() {
          var msg = 'Request failed';
          if (req.statusText) {
            msg += ' with status "' + req.statusText + '"';
          }
          if (req.responseText) {
            msg += ': ' + req.responseText;
          }
          pubStatus.classList.add('error');
          pubStatus.textContent = msg;
          pubBtn.disabled = false;
        };

        req.addEventListener('load', function() {
          if (req.status != 200) {
            onError();
            return;
          }
          pubStatus.textContent = ('Publication request submitted' +
            ' (reload preview to re-publish)');
          pubStatus.classList.add('success');
        });
        req.addEventListener('error', onError);
        req.addEventListener('abort', onError);
        req.open("post", pubForm.action);
        req.send(new FormData(pubForm));
      });
    });
  </script>

  <script src="./docs_files/native-shim.js"></script>
  <script src="./docs_files/custom-elements.min.js"></script>
  <script src="./docs_files/prettify.js"></script>
  <script src="./docs_files/codelab-elements.js"></script>


</body></html>